.vault_vars:
  variables:
    VAULT_ADDR: "https://${VAULT_S3_BUCKET}.com"
    VAULT_HOST: "${VAULT_S3_BUCKET}.com"
    VAULT_PORT: 443
    VAULTENV_SECRETS_FILE: "${CI_PROJECT_DIR}/env.vars"
    ENV: DEV
    ENV_NAME: development
    ROLE_ID: "${INTEGRATES_DEV_ROLE_ID}"
    SECRET_ID: "${INTEGRATES_DEV_SECRET_ID}"

.registry_vars: &registry_vars
  variables:
    CI_REGISTRY_USER: "${GITLAB_USER}"
    CI_REGISTRY_PASSWORD: "${GITLAB_PASS}"
    CI_REGISTRY_EMAIL: "${GITLAB_EMAIL}"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY}/fluidsignal/default/integrates"

.kaniko_config: &kaniko_config
  <<: *registry_vars
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo '{"auths":{"'"${CI_REGISTRY}"'":{"username":"'"${CI_REGISTRY_USER}"'","password":"'"${CI_REGISTRY_PASSWORD}"'"}}}'
        > /kaniko/.docker/config.json

.kaniko_vault_config: &kaniko_vault_config
  extends: .vault_vars
  <<: *kaniko_config
  before_script:
    - wget -O vault.zip https://releases.hashicorp.com/vault/0.11.6/vault_0.11.6_linux_amd64.zip;
        unzip vault.zip;
        mv vault /busybox/
    - . ci-scripts/helpers/others.sh && vault_login
    - export FI_DRIVE_AUTHORIZATION=$(vault read -field=drive_authorization secret/integrates/${ENV_NAME})
    - export FI_DRIVE_AUTHORIZATION_CLIENT=$(vault read -field=drive_authorization_client secret/integrates/${ENV_NAME})
    - export FI_DOCUMENTROOT=$(vault read -field=documentroot secret/integrates/${ENV_NAME})
    - export FI_SSL_KEY=$(vault read -field=ssl_key secret/integrates/${ENV_NAME})
    - export FI_SSL_CERT=$(vault read -field=ssl_cert secret/integrates/${ENV_NAME})
    - echo '{"auths":{"'"${CI_REGISTRY}"'":{"username":"'"${CI_REGISTRY_USER}"'","password":"'"${CI_REGISTRY_PASSWORD}"'"}}}'
        > /kaniko/.docker/config.json

stages:
  - deps-base
  - deps-development
  - test
  - build
  - mr-check
  - deploy
  - post-deploy
  - coverage

deps-mobile:
  tags:
    - mobile
  stage: deps-base
  image: fluidattacks/alpine-kaniko:latest
  script:
    - ./ci-scripts/jobs/deps-mobile.sh

deps-production:
  stage: deps-base
  image: fluidattacks/alpine-kaniko:latest
  script:
    - ./ci-scripts/jobs/deps-production.sh

deps-development:
  stage: deps-development
  needs: [deps-production]
  image: fluidattacks/alpine-kaniko:latest
  script:
    - ./ci-scripts/jobs/deps-development.sh

test-terraform:
  stage: test
  image: registry.gitlab.com/fluidsignal/serves:builder
  script:
    - ./ci-scripts/jobs/test-terraform.sh
  artifacts:
    paths:
      - plan.txt
    expire_in: 1h
    when: on_success
  only:
    - branches
    - merge_requests
  except:
    - master

test-front:
  stage: test
  image: registry.gitlab.com/fluidattacks/integrates:deps-development
  script:
    - ./ci-scripts/jobs/test-front.sh
  artifacts:
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - front/coverage.lcov
    expire_in: 1 week
  only:
    - branches
    - merge_requests
  except:
    - master

test-mobile:
  stage: test
  needs: [deps-mobile]
  image: registry.gitlab.com/fluidattacks/integrates:deps-mobile
  script:
    - ./ci-scripts/jobs/test-mobile.sh
  except:
    - master

test-app:
  stage: test
  image: registry.gitlab.com/fluidattacks/integrates:deps-development
  script:
    - . ci-scripts/helpers/others.sh && vault_login
    - vaultenv ./ci-scripts/jobs/test-app.sh
  artifacts:
    name: "coverage_xml_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - coverage.xml
    expire_in: 1 week
  only:
    - branches
    - merge_requests
  except:
    - master

asserts-static:
  stage: test
  image: fluid-docker.jfrog.io/fluid:integrates_static
  retry: 1
  variables:
    BRANCH: "${CI_COMMIT_REF_NAME}"
    FA_STRICT: "true"
    ORG: "fluid"
    PASS: "${INTEGRATES_JFROG_PASS}"
    USER: "${INTEGRATES_JFROG_USER}"
  script:
    - cp -a ./* /code/
    - /entrypoint.sh
  except:
    - master

commitlint:
  stage: test
  image: starefossen/ruby-node:2-10
  script:
    - npm install --unsafe-perm
    - ./ci-scripts/jobs/commitlint.sh
  except:
    - master

build-terraform:
  stage: build
  image: registry.gitlab.com/fluidsignal/serves:builder
  script:
    - ./ci-scripts/jobs/build-terraform.sh
  only:
    - master

build-app:
  stage: build
  needs: [deps-development]
  <<: *kaniko_vault_config
  script:
    - MINUTES=$((
        ($(date +%d | sed 's/^0//') -1) * 1440 +
        $(date +%H | sed 's/^0//') * 60 +
        $(date +%M | sed 's/^0//')
      ))
    - FI_VERSION="$(date +%y.%m.)${MINUTES}"
    - echo -n "${FI_VERSION}" > version.txt
    - /kaniko/executor
        --build-arg CI_API_V4_URL="${CI_API_V4_URL}"
        --build-arg CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME}"
        --build-arg CI_PROJECT_ID="${CI_PROJECT_ID}"
        --build-arg CI_REPOSITORY_URL="${CI_REPOSITORY_URL}"
        --build-arg DOCUMENTROOT="${FI_DOCUMENTROOT}"
        --build-arg DRIVE_AUTHORIZATION="${FI_DRIVE_AUTHORIZATION}"
        --build-arg DRIVE_AUTHORIZATION_CLIENT="${FI_DRIVE_AUTHORIZATION_CLIENT}"
        --build-arg ENV_NAME="${ENV_NAME}"
        --build-arg SSL_CERT="${FI_SSL_CERT}"
        --build-arg SSL_KEY="${FI_SSL_KEY}"
        --build-arg VERSION="${FI_VERSION}"
        --cleanup
        --context "${CI_PROJECT_DIR}/deploy/containers/app/"
        --dockerfile "${CI_PROJECT_DIR}/deploy/containers/app/Dockerfile"
        --destination "${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_NAME}"
        --single-snapshot
        --snapshotMode time
  retry: 1
  artifacts:
    expire_in: 30m
    paths:
      - version.txt
    when: on_success

build-app-experimental:
  stage: build
  needs: [deps-development]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - sh ci-scripts/jobs/build-app.sh
  retry: 1
  artifacts:
    expire_in: 30m
    paths:
      - version.txt
    when: on_success

build-bot:
  stage: build
  needs: [deps-development]
  <<: *kaniko_vault_config
  script:
    - /kaniko/executor
        --build-arg CI_API_V4_URL="${CI_API_V4_URL}"
        --build-arg CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME}"
        --build-arg CI_PROJECT_ID="${CI_PROJECT_ID}"
        --build-arg ENV_NAME="${ENV_NAME}"
        --cleanup
        --context "${CI_PROJECT_DIR}/deploy/containers/bot/"
        --dockerfile "${CI_PROJECT_DIR}/deploy/containers/bot/Dockerfile"
        --destination "${CI_REGISTRY_IMAGE}/bot:${CI_COMMIT_REF_NAME}"
        --single-snapshot
        --snapshotMode time
  retry: 1

test-driver:
  stage: post-deploy
  image: registry.gitlab.com/fluidattacks/integrates:deps-development
  script:
    - . ci-scripts/helpers/others.sh && vault_login
    - vaultenv ./ci-scripts/jobs/test-driver.sh
  parallel: 3
  retry: 1
  artifacts:
    name: "regression_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - screenshots/

ephemeral-app:
  stage: deploy
  needs: [build-app-experimental]
  image: registry.gitlab.com/fluidsignal/serves:builder
  script:
    - . ci-scripts/helpers/others.sh && vault_login
    - vaultenv review-apps/cluster-config.sh
  retry: 1
  environment:
    name: "review/$CI_COMMIT_REF_SLUG"
    url: "https://$CI_COMMIT_REF_SLUG.$CI_PROJECT_NAME.env.fluidattacks.com/integrates"
    on_stop: stop-ephemeral-app
  except:
    - master

stop-ephemeral-app:
  stage: deploy
  image: registry.gitlab.com/fluidsignal/serves:builder
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  script:
    - ./ci-scripts/jobs/stop-ephemeral-app.sh
  retry: 1
  when: manual
  except:
    - master

asserts-dynamic:
  stage: post-deploy
  image: fluid-docker.jfrog.io/fluid:integrates_dynamic
  retry: 1
  script:
    - ./ci-scripts/jobs/asserts-dynamic.sh
  only:
    - master

danger:
  stage: mr-check
  image: starefossen/ruby-node:2-10
  dependencies:
    - test-terraform
  script:
    - ./ci-scripts/jobs/danger.sh
  only:
    - merge_requests

deploy-k8s:
  stage: deploy
  image: registry.gitlab.com/fluidsignal/serves:builder
  environment:
    name: "production"
    url: "https://fluidattacks.com/integrates"
  script:
    - . ci-scripts/helpers/others.sh && vault_login
    - vaultenv ./ci-scripts/jobs/deploy-k8s.sh
  only:
    - master

deploy-mobile:
  tags:
    - mobile
  stage: deploy
  needs: [deps-mobile]
  image: registry.gitlab.com/fluidattacks/integrates:deps-mobile
  script:
    - . ci-scripts/helpers/others.sh && vault_login
    - vaultenv ./ci-scripts/jobs/deploy-mobile.sh
  environment:
    name: "mobile-review/$CI_COMMIT_REF_NAME"
    url: "https://expo.io/@developmentatfluid/integrates?release-channel=$CI_COMMIT_REF_NAME"

.deploy-playstore:
  stage: deploy
  dependencies:
    - deps-mobile
  script:
    - ./ci-scripts/jobs/deploy-playstore.sh
  allow_failure: true
  only:
    - master

new-version-mail:
  stage: post-deploy
  image: registry.gitlab.com/fluidattacks/integrates:deps-development
  dependencies:
    - build-app
  script:
    - . ci-scripts/helpers/others.sh && vault_login
    - export DJANGO_SETTINGS_MODULE=fluidintegrates.settings
    - vaultenv python integrates_version.py
  only:
    - master
  except:
    - schedules

coverage-report:
  stage: coverage
  image: registry.gitlab.com/fluidattacks/integrates:deps-development
  dependencies:
    - test-app
    - test-front
  script:
    - . ci-scripts/helpers/others.sh && vault_login
    - vaultenv ./run_codecov.sh
  retry: 1
  only:
    - merge_requests
  except:
    - master
