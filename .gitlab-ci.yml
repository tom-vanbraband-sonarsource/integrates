stages:
  - deps-base
  - deps
  - rotation
  - build
  - test
  - mr-check
  - deploy-infra
  - deploy-app
  - post-deploy

.in_branches_and_mrs: &in_branches_and_mrs
  only:
    - branches
    - merge_requests

.in_dev_branch: &in_dev_branch
  except:
    refs:
      - master
      - merge_requests
      - schedules
      - triggers

.in_dev_branch_and_mrs: &in_dev_branch_and_mrs
  only:
    - branches
    - merge_requests
  except:
    - master
    - schedules
    - triggers

.in_dev_and_master_branch: &in_dev_and_master_branch
  except:
    refs:
      - schedules
      - triggers

.in_master_branch: &in_master_branch
  only:
    refs:
      - master
  except:
    refs:
      - schedules
      - triggers

.in_master_branch_and_schedules: &in_master_branch_and_schedules
  only:
    refs:
      - master
  except:
    refs:
      - triggers

.in_master_branch_and_schedules_and_triggers: &in_master_branch_and_schedules_and_triggers
  only:
    refs:
      - master

.in_mrs: &in_mrs
  only:
    refs:
      - merge_requests
  except:
    refs:
      - branches
      - triggers
      - schedules

.in_schedule_nightly_build: &in_schedule_nightly_build
  only:
    refs:
      - schedules
    variables:
      - $NIGHTLY_BUILD

.with_nix: &with_nix
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}:nix"
  needs: []
  script:
    - ./build.sh "${CI_JOB_NAME}"
  interruptible: true

build_lambdas:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: deps
  artifacts:
    expire_in: 1 day
    paths:
      - lambda/packages/
    when: on_success

build_django_apps:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: deps
  artifacts:
    expire_in: 1 day
    paths:
      - django-apps/packages/
    when: on_success

deploy_container_deps_mobile:
  <<: *with_nix
  tags: [autoscaling-large]
  stage: deps-base

deploy_container_deps_base:
  <<: *with_nix
  stage: deps-base

deploy_container_deps_development:
  <<: *with_nix
  stage: deps
  needs: [deploy_container_deps_base]

deploy_container_deps_production:
  <<: *with_nix
  stage: deps
  needs: [deploy_container_deps_base]

deploy_container_app:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: build
  needs:
    - build_django_apps
    - deploy_container_deps_development
  retry: 1
  artifacts:
    expire_in: 1 day
    paths:
    - version.txt
    when: on_success

deploy_container_nix_cache:
  <<: *with_nix
  <<: *in_schedule_nightly_build
  tags: [autoscaling-large]
  image: nixos/nix:2.3
  stage: deploy-infra
  before_script:
    - apk add --no-cache bash

infra_resources_deploy:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

infra_resources_test:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: test

infra_secret_management_deploy:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

infra_secret_management_test:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: test

lint_back:
  <<: *with_nix
  <<: *in_dev_branch
  stage: test

lint_front:
  <<: *with_nix
  <<: *in_dev_branch
  stage: test

lint_build_system:
  <<: *with_nix
  <<: *in_dev_branch
  stage: test

lint_mobile:
  <<: *with_nix
  <<: *in_dev_branch
  stage: test

test_back:
  <<: *with_nix
  <<: *in_dev_branch_and_mrs
  stage: test
  artifacts:
    name: "coverage_xml_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - coverage.xml
    expire_in: 1 week

test_front:
  <<: *with_nix
  <<: *in_dev_branch_and_mrs
  stage: test
  artifacts:
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - front/coverage.lcov
    expire_in: 1 week

test_mobile:
  <<: *with_nix
  <<: *in_dev_branch
  stage: test

build-front:
  stage: build
  needs: [deploy_container_deps_development]
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - ./ci-scripts/jobs/build-front.sh
  retry: 1
  artifacts:
    expire_in: 1 day
    paths:
    - app/assets/
    when: on_success

asserts_static:
  stage: test
  tags: [autoscaling]
  needs: []
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --static
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             ) || true
  except:
    - master
  interruptible: true
  <<: *in_dev_and_master_branch

commitlint:
  stage: test
  tags: [autoscaling]
  needs: []
  image: starefossen/ruby-node:2-10
  script:
    - npm install --unsafe-perm
    - ./ci-scripts/jobs/commitlint.sh
  <<: *in_dev_branch

danger:
  stage: mr-check
  tags: [autoscaling]
  image: fluidattacks/danger-ruby
  script:
    - ./ci-scripts/jobs/danger.sh
  <<: *in_mrs

coverage-report:
  stage: mr-check
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  dependencies:
    - test_back
    - test_front
  script:
    - ./ci-scripts/jobs/coverage-report.sh
  retry: 1
  <<: *in_mrs

deploy-back-ephemeral:
  stage: deploy-app
  tags: [autoscaling]
  needs: [deploy_container_app]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - ./review-apps/cluster-config.sh
  retry: 1
  environment:
    name: "review/$CI_COMMIT_REF_SLUG"
    url: "https://$CI_COMMIT_REF_SLUG.$CI_PROJECT_NAME.env.fluidattacks.com/integrates"
    on_stop: stop-ephemeral-app
  <<: *in_dev_branch

stop-ephemeral-app:
  stage: deploy-app
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/app:$CI_COMMIT_REF_NAME
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  script:
    - ./ci-scripts/jobs/stop-ephemeral-app.sh
  retry: 1
  when: manual
  <<: *in_dev_branch

deploy-front:
  stage: deploy-app
  tags: [autoscaling]
  needs: [build-front]
  image: registry.gitlab.com/fluidattacks/integrates/app:$CI_COMMIT_REF_NAME
  script:
    - ./ci-scripts/jobs/deploy-front.sh

deploy-back:
  stage: deploy-app
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  environment:
    name: "production"
    url: "https://fluidattacks.com/integrates"
  script:
    - ./ci-scripts/jobs/deploy-k8s.sh
  <<: *in_master_branch_and_schedules_and_triggers

deploy-mobile:
  stage: deploy-app
  tags: [autoscaling-large]
  needs: [deploy_container_deps_mobile]
  image: registry.gitlab.com/fluidattacks/integrates/deps-mobile:$CI_COMMIT_REF_NAME
  script:
    - ./ci-scripts/jobs/deploy-mobile.sh
  environment:
    name: "mobile-review/$CI_COMMIT_REF_NAME"
    url: "https://expo.io/@developmentatfluid/integrates?release-channel=$CI_COMMIT_REF_NAME"

test-driver-dev:
  stage: post-deploy
  tags: [autoscaling]
  needs: [deploy-back-ephemeral]
  image: registry.gitlab.com/fluidattacks/integrates/app:$CI_COMMIT_REF_NAME
  script:
    - ./ci-scripts/jobs/test-driver.sh
  parallel: 5
  retry: 1
  artifacts:
    name: "regression_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - screenshots/
    when: always
  interruptible: true
  <<: *in_dev_branch

test-driver-prod:
  stage: post-deploy
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:master
  script:
    - pip3 install -U django-apps/packages/*.zip
    - ./ci-scripts/jobs/test-driver.sh
  parallel: 5
  retry: 1
  artifacts:
    name: "regression_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - screenshots/
    when: always
  interruptible: true
  <<: *in_master_branch

asserts_dynamic:
  stage: post-deploy
  tags: [autoscaling]
  needs: []
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --dynamic
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             )
  interruptible: true
  <<: *in_master_branch

new-version-mail:
  stage: post-deploy
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/app:$CI_COMMIT_REF_NAME
  dependencies:
    - deploy_container_app
  script:
    - pip3 install -U gitpython wheel mandrill-really-maintained
    - ./ci-scripts/jobs/new-version-mail.sh
  <<: *in_master_branch

clean-registry-caches:
  stage: post-deploy
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - ./ci-scripts/jobs/clean-registry-caches.sh
  <<: *in_schedule_nightly_build

rotate-jwt-token:
  stage: rotation
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - ./ci-scripts/jobs/rotate-jwt-token.sh
  <<: *in_schedule_nightly_build

renew-review-certificate:
  stage: post-deploy
  tags: [autoscaling]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - ./ci-scripts/jobs/renew-review-certificate.sh
  environment:
    name: "review/renew-review-cert"
    auto_stop_in: 1 hour
  <<: *in_schedule_nightly_build

backup-terraform-apply:
  stage: deploy-infra
  tags: [autoscaling]
  needs: [backup-terraform-test]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - . ci-scripts/jobs/backup.sh
    - backup_terraform_apply
  <<: *in_master_branch

backup-terraform-test:
  stage: test
  tags: [autoscaling]
  needs: [deploy_container_deps_development]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - . ci-scripts/jobs/backup.sh
    - backup_terraform_test
  interruptible: true
  <<: *in_dev_and_master_branch

django-db-terraform-apply:
  stage: deploy-infra
  tags: [autoscaling]
  needs: [django-db-terraform-test]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - . ci-scripts/jobs/django-db.sh
    - django_db_apply
  <<: *in_master_branch

django-db-terraform-test:
  stage: test
  tags: [autoscaling]
  needs: [deploy_container_deps_development]
  image: registry.gitlab.com/fluidattacks/integrates/deps-development:$CI_COMMIT_REF_NAME
  script:
    - . ci-scripts/jobs/django-db.sh
    - django_db_test
  interruptible: true
  <<: *in_dev_and_master_branch
