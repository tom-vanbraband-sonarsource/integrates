"Main Query object"
type Query {
    "Get alerts from project"
    alert(project_name: String!, organization: String!): Alert

    "Get event"
    event(identifier: String!): Event

    "List of events of a project"
    events(project_name: String!): [Event]

    "Finding entity"
    finding(identifier: String!): Finding

    "InternalProject entity"
    internal_project_names: InternalProject

    "List of alive projects"
    alive_projects: [Project]

    "Get resources from project"
    resources(project_name: String!): Resource

    "Get user info from project"
    user(project_name: String!, user_email: String!): User

    "List projects a user is subscribed to"
    user_list_projects(user_email: String!): [Project]

    "Project entity"
    project(project_name: String!): Project

    "Get BreakBuild executions"
    break_build_executions(
        project_name: String!,
        from_date: String,
        to_date: String): BreakBuildExecutions

    "Me entity"
    me: Me
}

type Alert {
    project_name: String!
    organization: String!
}

type Event {
    identifier: String!
}

type Finding {
    identifier: String!
}

type InternalProject {
    project_name: String!
}

type Resource {
    project_name: String!
}

type User {
    project_name: String!
    user_email: String!
}

type Project {
    project_name: String!
}

type BreakBuildExecutions {
    project_name: String!
    from_date: String
    to_date: String
}

type Me {
    user_email: String!
}
