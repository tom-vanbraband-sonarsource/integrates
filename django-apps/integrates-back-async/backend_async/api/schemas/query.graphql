"Main Query object"
type Query {
    "Get alerts from project"
    alert(project_name: String!, organization: String!): Alert

    "Get event"
    event(identifier: String!): Event

    "List of events of a project"
    events(project_name: String!): [Event]

    "Finding entity"
    finding(identifier: String!): Finding

    "InternalProject entity"
    internal_project_names: InternalProject

    "List of alive projects"
    alive_projects: [Project]

    "Get resources from project"
    resources(project_name: String!): Resource

    "Get user info from project"
    user(project_name: String!, user_email: String!): User

    "List projects a user is subscribed to"
    user_list_projects(user_email: String!): [Project]

    "Project entity"
    project(project_name: String!): Project

    "Get BreakBuild executions"
    break_build_executions(
        project_name: String!,
        from_date: String,
        to_date: String): BreakBuildExecutions

    "Me entity"
    me: Me
}

type Alert {
    message: String
    project: String
    organization: String
    status: Int
}

type Event {
    id: String
    analyst: String
    client: String
    comments: [Comment!]
    project_name: String
    client_project: String
    detail: String
    event_type: String
    event_date: String
    historic_state: [GenericScalar]
    affectation: String
    accessibility: String
    affected_components: String
    context: String
    subscription: String
    evidence_file: String
    closing_date: String
}

type Finding {
    actor: String!
    affected_systems: String
    age: Int
    analyst: String
    attack_vector_desc: String
    bts_url: String
    closed_vulnerabilities: Int
    comments: [Comment!]
    compromised_attributes: String
    compromised_records: Int
    current_state: String
    cvss_version: String
    cwe_url: String
    description: String
    evidence: GenericScalar
    exploit: String
    id: String
    is_exploitable: Boolean
    last_vulnerability: Int
    observations: [Comment!]
    open_vulnerabilities: Int
    project_name: String
    recommendation: String
    records: JSONString
    release_date: String
    remediated: Boolean
    report_date: String
    requirements: String
    risk: String
    scenario: String
    severity: GenericScalar
    severity_score: Float
    state: String
    historic_state: [GenericScalar]
    historic_treatment: [GenericScalar]
    threat: String
    title: String
    tracking: [GenericScalar]
    type: String
    vulnerabilities: [Vulnerabilities!]
}

type InternalProject {
    project_name: String!
}

type Resource {
    project_name: String!
}

type User {
    project_name: String!
    user_email: String!
}

type Project {
    project_name: String!
}

type BreakBuildExecutions {
    project_name: String!
    from_date: String
    to_date: String
}

type Me {
    user_email: String!
}

type Comment {
    id: String
    content: String
    created: String
    email: String
    fullname: String
    modified: String
    parent: String
}

type Vulnerabilities {
    id: String
    analyst: String
    finding_id: String
    vuln_type: String
    where: String
    specific: String
    historic_state: [GenericScalar]
    current_state: String
    current_approval_status: String
    last_analyst: String
    last_approved_status: String
    acceptance_date: String
    treatment: String
    external_bts: String
    treatment_justification: String
    treatment_manager: String
    severity: String
    tag: String
    tags: [String!]
    remediated: Boolean
}
