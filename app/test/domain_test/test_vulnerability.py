import pytest

from django.test import TestCase

from app.domain.vulnerability import (
    ungroup_specific, is_range, is_secuence, range_to_list
)
from app.exceptions import InvalidRange


class VulnerabilityTests(TestCase):

    def test_ungroup_specific(self):
        specific = '13,14,18-20,24-30,40'
        test_data = ungroup_specific(specific)
        expected_output = [
            '13', '14', '18', '19', '20', '24', '25', '26', '27', '28', '29',
            '30', '40']
        assert isinstance(test_data, list)
        assert test_data == expected_output

    def test_is_range(self):
        range_value = '100-200'
        no_range_value = '20'
        assert is_range(range_value)
        assert not is_range(no_range_value)

    def test_is_secuence(self):
        secuence_value = '20,21,22'
        no_secuence_values = ['20-30', '20']
        assert is_secuence(secuence_value)
        for no_secuence_value in no_secuence_values:
            assert not is_secuence(no_secuence_value)

    def test_range_to_list(self):
        range_value = '10-15'
        bad_range_value = '13-12'
        test_data = range_to_list(range_value)
        expected_output = ['10', '11', '12', '13', '14', '15']
        assert isinstance(test_data, list)
        assert test_data == expected_output
        with pytest.raises(InvalidRange):
            assert range_to_list(bad_range_value)
