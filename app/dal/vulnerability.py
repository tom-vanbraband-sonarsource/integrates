""" DAL functions for vulnerabilities """

from __future__ import absolute_import

import boto3
from boto3.dynamodb.conditions import Key

# pylint:disable=relative-import
from __init__ import FI_AWS_DYNAMODB_ACCESS_KEY, FI_AWS_DYNAMODB_SECRET_KEY


DYNAMODB_RESOURCE = boto3.resource(
    service_name='dynamodb',
    aws_access_key_id=FI_AWS_DYNAMODB_ACCESS_KEY,
    aws_secret_access_key=FI_AWS_DYNAMODB_SECRET_KEY,
    region_name='us-east-1')
TABLE = DYNAMODB_RESOURCE.Table('FI_vulnerabilities')


def get_vulnerabilities(finding_id):
    """Get vulnerabilities of the given finding"""
    filter_exp = Key('finding_id').eq(finding_id)
    response = TABLE.query(KeyConditionExpression=filter_exp)
    vulns = response.get('Items', [])
    while 'LastEvaluatedKey' in response:
        response = TABLE.query(
            KeyConditionExpression=filter_exp,
            ExclusiveStartKey=response['LastEvaluatedKey'])
        vulns += response.get('Items', [])

    return vulns
