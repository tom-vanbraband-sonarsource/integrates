""" DAL functions for vulnerabilities """

from __future__ import absolute_import

import boto3
from boto3.dynamodb.conditions import Attr

# pylint:disable=relative-import
from __init__ import FI_AWS_DYNAMODB_ACCESS_KEY, FI_AWS_DYNAMODB_SECRET_KEY


DYNAMODB_RESOURCE = boto3.resource(
    service_name='dynamodb',
    aws_access_key_id=FI_AWS_DYNAMODB_ACCESS_KEY,
    aws_secret_access_key=FI_AWS_DYNAMODB_SECRET_KEY,
    region_name='us-east-1')
TABLE = DYNAMODB_RESOURCE.Table('FI_vulnerabilities')


def list_vulnerabilities(finding_ids):
    """Get vulnerabilities of a finding."""
    filtering_exp = Attr('finding_id').is_in(finding_ids)
    response = TABLE.scan(KeyConditionExpression=filtering_exp)
    vulnerabilities = response['Items']
    while response.get('LastEvaluatedKey'):
        response = TABLE.scan(KeyConditionExpression=filtering_exp,
                              ExclusiveStartKey=response['LastEvaluatedKey'])
        vulnerabilities += response['Items']

    return vulnerabilities
